---
const {
  provincia,
  municipio,
  titulo = "",
} = Astro.props;

// Importar las funciones para cargar datos
import { cargarDatosEdadSync, cargarDatosHistoricosSync } from '../scripts/dataLoader.js';
import { municipios } from '../data/municipios.js';

// Obtener el nombre del municipio
const municipioObj = municipios.find(m => m.codigoINE === municipio);
const nombreMunicipio = municipioObj?.nombre || municipio;

// Cargar datos de edad (que incluyen población actual)
const datosEdad = cargarDatosEdadSync(provincia, nombreMunicipio);

// Pre-cargar los datos
const municipioData = datosEdad ? {
  nombre: nombreMunicipio,
  poblacion: datosEdad.population,
  mayores: datosEdad.mayor,
  menores: datosEdad.menor,
  year: '2024'
} : null;

// NUEVA LÓGICA: Cargar datos históricos para las tres tarjetas adicionales
const datosHistoricos = cargarDatosHistoricosSync(provincia, municipio);

// Calcular estadísticas históricas
const poblacion1900 = datosHistoricos.find(d => d.year === '1900')?.population;
const poblacion2024 = datosHistoricos.find(d => d.year === '2024')?.population;
const poblacionMaxima = datosHistoricos.length > 0 ?
  Math.max(...datosHistoricos.map(d => d.population)) : 0;
const poblacionMinima = datosHistoricos.length > 0 ?
  Math.min(...datosHistoricos.map(d => d.population)) : 0;

// Calcular variación desde 1900
const variacion1900 = poblacion1900 && poblacion2024 ?
  ((poblacion2024 - poblacion1900) / poblacion1900) * 100 : null;

// Calcular mayor crecimiento y decrecimiento por década
let mayorCrecimiento = { valor: 0, periodo: '' };
let mayorDecrecimiento = { valor: 0, periodo: '' };

if (datosHistoricos.length > 1) {
  const decadas = Array.from({ length: 13 }, (_, i) => i);

  decadas.forEach(i => {
    const inicio = 1900 + (i * 10);
    const fin = inicio + 10;

    const poblacionInicio = datosHistoricos.find(d => d.year === inicio.toString())?.population;
    const poblacionFin = datosHistoricos.find(d => d.year === fin.toString())?.population;

    if (poblacionInicio && poblacionFin) {
      const cambio = ((poblacionFin - poblacionInicio) / poblacionInicio) * 100;

      if (cambio > mayorCrecimiento.valor) {
        mayorCrecimiento = {
          valor: cambio,
          periodo: `${inicio}-${fin}`
        };
      }

      if (cambio < mayorDecrecimiento.valor) {
        mayorDecrecimiento = {
          valor: cambio,
          periodo: `${inicio}-${fin}`
        };
      }
    }
  });
}
---

<div class="datos-municipio-container">
  {titulo && <h2 class="subtittle">{titulo}</h2>}

  <div id="datos-municipio-contenido">
      {municipioData ? (
        <>
          <div class="tarjeta tarjeta-azul">
            <div class="tarjeta-contenido">
              <span class="tarjeta-valor">{municipioData.poblacion.toLocaleString('es-ES')}</span>
              <span class="tarjeta-descripcion">Habitantes en 2024</span>
              <span class="tarjeta-extra">Datos actuales</span>
            </div>
          </div>
          <div class="tarjeta tarjeta-ambar">
            <div class="tarjeta-contenido">
              <span class="tarjeta-valor">{municipioData.mayores.toFixed(1)}%</span>
              <span class="tarjeta-descripcion">Mayores de 65 años</span>
              <span class="tarjeta-extra">Datos de {municipioData.year}</span>
            </div>
          </div>
          <div class="tarjeta tarjeta-verde">
            <div class="tarjeta-contenido">
              <span class="tarjeta-valor">{municipioData.menores.toFixed(1)}%</span>
              <span class="tarjeta-descripcion">Menores de 18 años</span>
              <span class="tarjeta-extra">Datos de {municipioData.year}</span>
            </div>
          </div>
          {variacion1900 !== null && (
            <div class={`tarjeta ${variacion1900 >= 0 ? 'tarjeta-emerald' : 'tarjeta-indigo'}`}>
              <div class="tarjeta-contenido">
                <span class="tarjeta-valor">
                  {variacion1900 > 0 ? '+' : ''}{variacion1900.toFixed(1)}%
                </span>
                <span class="tarjeta-descripcion">
                  Evolución desde 1900
                </span>
                <span class="tarjeta-extra">
                  {variacion1900 >= 0 ? 'Aumento poblacional' : 'Reducción poblacional'}
                </span>
              </div>
            </div>
          )}
          {mayorCrecimiento.valor > 0 && (
            <div class="tarjeta tarjeta-emerald">
              <div class="tarjeta-contenido">
                <span class="tarjeta-valor">{mayorCrecimiento.valor.toFixed(2)}%</span>
                <span class="tarjeta-descripcion">Mayor crecimiento ({mayorCrecimiento.periodo})</span>
                <span class="tarjeta-extra">Mejor década</span>
              </div>
            </div>
          )}
          {mayorDecrecimiento.valor < 0 && (
            <div class="tarjeta tarjeta-amber">
              <div class="tarjeta-contenido">
                <span class="tarjeta-valor">{mayorDecrecimiento.valor.toFixed(2)}%</span>
                <span class="tarjeta-descripcion">Mayor decrecimiento ({mayorDecrecimiento.periodo})</span>
                <span class="tarjeta-extra">Peor década</span>
              </div>
            </div>
          )}
        </>
      ) : (
        <p class="cargando-datos">No se encontraron datos para este municipio</p>
      )}
    </div>
</div>

<style>
  /* Estilos existentes - NO TOCAR */
  .datos-municipio-container {
    width: 100%;
    max-width: 100%;
    margin-bottom: 2rem;
  }

  .cargando-datos {
    text-align: center;
    padding: 2rem;
    color: #64748b;
  }

  .demo-content {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: 1.5rem;
    margin: 2rem 0;
  }

  .tarjeta {
    position: relative;
    border-radius: 0.75rem;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    border-top: 4px solid #ccc;
    transition: all 0.3s ease;
    background-color: #fff;
  }

  .tarjeta:hover {
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.15);
    transform: scale(1.05);
  }

  .tarjeta-contenido {
    padding: 1.5rem;
  }

  .tarjeta-valor {
    font-size: 2.25rem;
    font-weight: 800;
    display: block;
  }

  .tarjeta-descripcion {
    display: block;
    color: #334155;
    margin-top: 0.75rem;
  }

  .tarjeta-extra {
    display: block;
    font-size: 0.875rem;
    color: #64748b;
    margin-top: 0.5rem;
  }

  /* Colores existentes - NO TOCAR */
  .tarjeta-azul {
    border-top-color: #4f46e5;
    background-color: #eef2ff;
  }

  .tarjeta-azul .tarjeta-valor {
    color: #4338ca;
  }

  .tarjeta-ambar {
    border-top-color: #d97706;
    background-color: #fffbeb;
  }

  .tarjeta-ambar .tarjeta-valor {
    color: #b45309;
  }

  .tarjeta-verde {
    border-top-color: #059669;
    background-color: #ecfdf5;
  }

  .tarjeta-verde .tarjeta-valor {
    color: #047857;
  }

  /* NUEVOS ESTILOS para las tarjetas adicionales */
  .tarjeta-indigo {
    border-top-color: #6366f1;
    background-color: #eef2ff;
  }

  .tarjeta-indigo .tarjeta-valor {
    color: #4338ca;
  }

  .tarjeta-emerald {
    border-top-color: #10b981;
    background-color: #ecfdf5;
  }

  .tarjeta-emerald .tarjeta-valor {
    color: #065f46;
  }

  .tarjeta-indigo {
    border-top-color: #6366f1;
    background-color: #eef2ff;
  }

  .tarjeta-indigo .tarjeta-valor {
    color: #4338ca;
  }
</style>
